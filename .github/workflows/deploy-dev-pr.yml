name: Deploy Development Web App to CloudFront & S3

on:
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    environment: AWS Keys
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm --force ci

      - name: Build React App
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_FRONTEND_DEPLOYER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_FRONTEND_DEPLOYER_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2 # Seoul

      - name: Deploy to S3
        env:
          aws-access-key-id: ${{ secrets.AWS_FRONTEND_DEPLOYER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_FRONTEND_DEPLOYER_SECRET_ACCESS_KEY }}
        run: aws s3 sync --region ap-northeast-2 build s3://${{ vars.AWS_S3_DEV_BUCKET_NAME }}/pr-${{ github.event.pull_request.number }}/ --delete

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DEV_DISRIBUTION_ID }} --paths "/pr-${{ github.event.pull_request.number }}/*"

      - name: Create GitHub Deployment
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          URL: ${{vars.AWS_CLOUDFRONT_DEV_URL}}
        with:
          script: |
            const prNumber = process.env.PR_NUMBER;
            const url = process.env.URL;
            const previewUrl = `${url}/pr-${prNumber}/index.html`;

            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
              auto_merge: false,
              required_contexts: [],
              environment: "Preview",
              transient_environment: true,
              description: `Preview for PR #${prNumber}`,
            });

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: "success",
              environment_url: previewUrl,
              log_url: previewUrl,
              description: `Deployed Preview: PR #${prNumber}`,
            });
